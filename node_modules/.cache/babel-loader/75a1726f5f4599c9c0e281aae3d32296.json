{"ast":null,"code":"var _jsxFileName = \"E:\\\\PROGRAMING\\\\HTML CSS  JAVA SCRIPT\\\\5_ReactJS\\\\12_Hooks_With_Array_AND_ObjectDistruction_IN_ReactJS\\\\reactapp\\\\src\\\\App.jsx\";\n//                  CERATING NUMBER INCREMENTED APP WITH USE-STATE HOOK IN DOM                  \\\\\n\n/*\r\n            DEFINE UseState :\r\n                    useState is a Hook that allows you to have state variables in functional components. \r\n                     There are two types of components in React: class and functional components. \r\n                      Class components are ES6 classes that extend from React.Component and can have state and lifecycle methods.\r\n                AS :\r\n                    Creat The UseState Hook and Distruct it using Array Distructuring as it return Array values :\r\n                        const [initialValue , functionWithparameter] = useState();\r\n                    The argument passed to useState is the actual initial state, the data that will be subject to changes.\r\n                     useState returns for you two bindings:\r\n                        * The actual value for the state\r\n                        * The state updater function for said state\r\n                         AS : \r\n                            In 'ínitialValue' a value is stored that is comming from the useState's Parameter , \r\n                                The 'functionWithparameter' is the Second variable that is a Function with have the Value Store in the 'initialValue' , But as a Function we can Manuplate & change the value by using this Function.\r\n                                    *** If the value is Changed in the 'functionWithparameter that the 'initialValue' is also Updated.\r\n*/\n// Importing Requried Modules :\nimport React from 'react'; // Importing Hooks's Hodule (UseState) :\n// This Module is Automatic Imported when you use Hook(UseState) in the Project :\n\nimport { useState } from 'react'; // Imorting CSS :\n\nimport './index.css'; // Creating the App Component :\n\nconst App = () => {\n  // As the Hooks is used in the Main Function & at the Top Level , So we started code Hook from here :\n  // 'oldnumber' is the Actuall Value for the State , 'update' is the State Updater Function for Said State :\n  const [oldnumber, update] = useState(0); // Changing the Value in the 'update' a State Updater , If the Value ion the State Updater is Changed then the State (oldnumber) is also Update.\n\n  const incriment = () => {\n    // Incrimenting the Number in the StateUpdater by 1 :\n    update(oldnumber + 1);\n  }; // Rendring :\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"Click the Button To Incriment The Number :\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \" \", oldnumber, \" \"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: incriment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \" Click TO Incriment. \"));\n}; // Exporting App Component :\n\n\nexport default App;","map":{"version":3,"sources":["E:/PROGRAMING/HTML CSS  JAVA SCRIPT/5_ReactJS/12_Hooks_With_Array_AND_ObjectDistruction_IN_ReactJS/reactapp/src/App.jsx"],"names":["React","useState","App","oldnumber","update","incriment"],"mappings":";AAAA;;AACA;;;;;;;;;;;;;;;;;AAiBA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACI;;AACJ,SAASC,QAAT,QAAyB,OAAzB,C,CAEA;;AACA,OAAO,aAAP,C,CAGI;;AACJ,MAAMC,GAAG,GAAG,MAAM;AACV;AACI;AACR,QAAM,CAACC,SAAD,EAAYC,MAAZ,IAAsBH,QAAQ,CAAC,CAAD,CAApC,CAHc,CAIV;;AACJ,QAAMI,SAAS,GAAG,MAAM;AAChB;AACJD,IAAAA,MAAM,CAACD,SAAS,GAAG,CAAb,CAAN;AACH,GAHD,CALc,CAUV;;;AACJ,sBACI,uDACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAMA,SAAN,MAFJ,eAGI;AAAQ,IAAA,OAAO,EAAEE,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAHJ,CADJ;AAOH,CAlBD,C,CAsBI;;;AACJ,eAAeH,GAAf","sourcesContent":["//                  CERATING NUMBER INCREMENTED APP WITH USE-STATE HOOK IN DOM                  \\\\\r\n/*\r\n            DEFINE UseState :\r\n                    useState is a Hook that allows you to have state variables in functional components. \r\n                     There are two types of components in React: class and functional components. \r\n                      Class components are ES6 classes that extend from React.Component and can have state and lifecycle methods.\r\n                AS :\r\n                    Creat The UseState Hook and Distruct it using Array Distructuring as it return Array values :\r\n                        const [initialValue , functionWithparameter] = useState();\r\n                    The argument passed to useState is the actual initial state, the data that will be subject to changes.\r\n                     useState returns for you two bindings:\r\n                        * The actual value for the state\r\n                        * The state updater function for said state\r\n                         AS : \r\n                            In 'ínitialValue' a value is stored that is comming from the useState's Parameter , \r\n                                The 'functionWithparameter' is the Second variable that is a Function with have the Value Store in the 'initialValue' , But as a Function we can Manuplate & change the value by using this Function.\r\n                                    *** If the value is Changed in the 'functionWithparameter that the 'initialValue' is also Updated.\r\n*/\r\n// Importing Requried Modules :\r\nimport React from 'react';\r\n// Importing Hooks's Hodule (UseState) :\r\n    // This Module is Automatic Imported when you use Hook(UseState) in the Project :\r\nimport { useState } from 'react';\r\n\r\n// Imorting CSS :\r\nimport './index.css'\r\n\r\n\r\n    // Creating the App Component :\r\nconst App = () => {\r\n        // As the Hooks is used in the Main Function & at the Top Level , So we started code Hook from here :\r\n            // 'oldnumber' is the Actuall Value for the State , 'update' is the State Updater Function for Said State :\r\n    const [oldnumber, update] = useState(0);\r\n        // Changing the Value in the 'update' a State Updater , If the Value ion the State Updater is Changed then the State (oldnumber) is also Update.\r\n    const incriment = () => {\r\n            // Incrimenting the Number in the StateUpdater by 1 :\r\n        update(oldnumber + 1);\r\n    };\r\n\r\n        // Rendring :\r\n    return (\r\n        <>\r\n            <h1>Click the Button To Incriment The Number :</h1>\r\n            <h3> {oldnumber} </h3>\r\n            <button onClick={incriment}> Click TO Incriment. </button>\r\n        </>\r\n    )\r\n};\r\n\r\n\r\n\r\n    // Exporting App Component :\r\nexport default App;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}