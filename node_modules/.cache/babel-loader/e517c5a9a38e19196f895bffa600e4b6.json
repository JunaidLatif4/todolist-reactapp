{"ast":null,"code":"var _jsxFileName = \"E:\\\\PROGRAMING\\\\HTML CSS  JAVA SCRIPT\\\\5_ReactJS\\\\Practice\\\\reactapp\\\\src\\\\Form3.jsx\";\n//                  CREATING FORM USING STATE AS A OBJECT WITH CONDITIONS             //\n\n/*\r\n            STATE As a Object :\r\n                    In order to make a Form that contain many Input tags , its difficult to handle the Form with the provious method that we studied in the privious Lectures.\r\n                        As it is hard to Manage the Large Code , So use the State as a Object .\r\n                * using State as a Object is very helpfull to make large Form contain many InputTages.\r\n                    For this Purpose us the Same 'oneChange' Function in all Tages & add 'name' Attribute to Distinguish them.\r\n                        AS :\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Enter your Name\"\r\n                                name = \"fullName\"\r\n                                onChange={enteringData}\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Enter your Password\"\r\n                                name = \"pass\"\r\n                                onChange={enteringData}\r\n                            />\r\n\r\n*/\nimport React from 'react';\nimport { useState } from 'react'; // Creating Form Component :\n\nconst Form = () => {\n  const [enterData, updateEnterData] = useState({\n    fullName: \"\",\n    pass: \"\"\n  });\n\n  const enteringData = data => {\n    const name = data.target.name;\n    const value = data.target.value;\n    updateEnterData(pvalue => {\n      if (name == \"fullName\") {\n        return {\n          fullName: value,\n          pass: pvalue.pass\n        };\n      } else {\n        return {\n          fullName: pvalue.fullName,\n          pass: value\n        };\n      }\n    });\n  };\n\n  const [fullData, updateFullData] = useState();\n\n  const showSaveData = () => {\n    updateFullData(enterData.pass);\n    console.log(`The Name = ${enterData.fullName} & the Password is = ${enterData.pass} `);\n  };\n\n  const onFormSubmit = event => {\n    event.preventDefault();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      color: \"green\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, \"FORM WITH OBJECT-STATE\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"Hi, \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, \" \", fullData, \" \"), \" \"), /*#__PURE__*/React.createElement(\"form\", {\n    id: \"form2\",\n    onSubmit: onFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter your Name\",\n    name: \"fullName\",\n    onChange: enteringData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Enter your Password\",\n    name: \"pass\",\n    onChange: enteringData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Submit/Show\",\n    onClick: showSaveData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default Form;","map":{"version":3,"sources":["E:/PROGRAMING/HTML CSS  JAVA SCRIPT/5_ReactJS/Practice/reactapp/src/Form3.jsx"],"names":["React","useState","Form","enterData","updateEnterData","fullName","pass","enteringData","data","name","target","value","pvalue","fullData","updateFullData","showSaveData","console","log","onFormSubmit","event","preventDefault","color"],"mappings":";AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;AAsBA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB,C,CAII;;AACJ,MAAMC,IAAI,GAAG,MAAM;AAGf,QAAM,CAACC,SAAD,EAAaC,eAAb,IAAgCH,QAAQ,CAAC;AAC3CI,IAAAA,QAAQ,EAAG,EADgC;AAE3CC,IAAAA,IAAI,EAAG;AAFoC,GAAD,CAA9C;;AAKA,QAAMC,YAAY,GAAIC,IAAD,IAAQ;AAEzB,UAAMC,IAAI,GAAGD,IAAI,CAACE,MAAL,CAAYD,IAAzB;AACA,UAAME,KAAK,GAAGH,IAAI,CAACE,MAAL,CAAYC,KAA1B;AAEAP,IAAAA,eAAe,CAAGQ,MAAD,IAAU;AACvB,UAAIH,IAAI,IAAI,UAAZ,EAAuB;AACnB,eACA;AACIJ,UAAAA,QAAQ,EAAGM,KADf;AAEIL,UAAAA,IAAI,EAAGM,MAAM,CAACN;AAFlB,SADA;AAKF,OANF,MAOK;AACD,eACI;AACID,UAAAA,QAAQ,EAAGO,MAAM,CAACP,QADtB;AAEIC,UAAAA,IAAI,EAAGK;AAFX,SADJ;AAMH;AACJ,KAhBc,CAAf;AAiBH,GAtBD;;AAkCA,QAAM,CAACE,QAAD,EAAYC,cAAZ,IAA8Bb,QAAQ,EAA5C;;AACA,QAAMc,YAAY,GAAE,MAAI;AACpBD,IAAAA,cAAc,CAAEX,SAAS,CAACG,IAAZ,CAAd;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAc,cAAad,SAAS,CAACE,QAAS,wBAAuBF,SAAS,CAACG,IAAK,GAApF;AACH,GAHD;;AAOA,QAAMY,YAAY,GAAIC,KAAD,IAAS;AAC1BA,IAAAA,KAAK,CAACC,cAAN;AACH,GAFD;;AAGA,sBACI,uDACI;AAAI,IAAA,KAAK,EAAK;AAACC,MAAAA,KAAK,EAAG;AAAT,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAQ;AAAM,IAAA,KAAK,EAAK;AAACA,MAAAA,KAAK,EAAG;AAAT,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAoCR,QAApC,MAAR,MAFJ,eAGI;AAAM,IAAA,EAAE,EAAC,OAAT;AAAiB,IAAA,QAAQ,EAAEK,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,WAAW,EAAC,iBAFhB;AAGI,IAAA,IAAI,EAAG,UAHX;AAII,IAAA,QAAQ,EAAEX,YAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAOI;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,WAAW,EAAC,qBAFhB;AAGI,IAAA,IAAI,EAAG,MAHX;AAII,IAAA,QAAQ,EAAEA,YAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,eAaI;AACI,IAAA,IAAI,EAAE,QADV;AAEI,IAAA,KAAK,EAAG,aAFZ;AAGI,IAAA,OAAO,EAAIQ,YAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,CAHJ,CADJ;AAyBH,CA9ED;;AAiFA,eAAeb,IAAf","sourcesContent":["//                  CREATING FORM USING STATE AS A OBJECT WITH CONDITIONS             //\r\n/*\r\n            STATE As a Object :\r\n                    In order to make a Form that contain many Input tags , its difficult to handle the Form with the provious method that we studied in the privious Lectures.\r\n                        As it is hard to Manage the Large Code , So use the State as a Object .\r\n                * using State as a Object is very helpfull to make large Form contain many InputTages.\r\n                    For this Purpose us the Same 'oneChange' Function in all Tages & add 'name' Attribute to Distinguish them.\r\n                        AS :\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Enter your Name\"\r\n                                name = \"fullName\"\r\n                                onChange={enteringData}\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Enter your Password\"\r\n                                name = \"pass\"\r\n                                onChange={enteringData}\r\n                            />\r\n\r\n*/\r\n\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\n\r\n\r\n\r\n    // Creating Form Component :\r\nconst Form = () => {\r\n\r\n\r\n    const [enterData , updateEnterData] = useState({\r\n        fullName : \"\" ,\r\n        pass : \"\",\r\n    });\r\n    \r\n    const enteringData = (data)=>{\r\n        \r\n        const name = data.target.name;\r\n        const value = data.target.value;\r\n        \r\n        updateEnterData ((pvalue)=>{\r\n            if (name == \"fullName\"){\r\n                return(\r\n                {\r\n                    fullName : value ,\r\n                    pass : pvalue.pass\r\n                }\r\n            )}\r\n            else {\r\n                return(\r\n                    {\r\n                        fullName : pvalue.fullName,\r\n                        pass : value\r\n                    }\r\n                )\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const [fullData , updateFullData] = useState ();\r\n    const showSaveData =()=>{\r\n        updateFullData (enterData.pass)\r\n        console.log( `The Name = ${enterData.fullName} & the Password is = ${enterData.pass} ` )\r\n    }\r\n\r\n\r\n\r\n    const onFormSubmit = (event)=>{\r\n        event.preventDefault();\r\n    }\r\n    return (\r\n        <>\r\n            <h1 style = { {color : \"green\"} } >FORM WITH OBJECT-STATE</h1>\r\n            <h2>Hi, <span style = { {color : \"red\"} }> {fullData} </span> </h2>\r\n            <form id=\"form2\" onSubmit={onFormSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter your Name\"\r\n                    name = \"fullName\"\r\n                    onChange={enteringData}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Enter your Password\"\r\n                    name = \"pass\"\r\n                    onChange={enteringData}\r\n                />\r\n                <input\r\n                    type =\"submit\"\r\n                    value = \"Submit/Show\"\r\n                    onClick = {showSaveData}\r\n                />\r\n            </form>\r\n        </>\r\n    )\r\n};\r\n\r\n\r\nexport default Form;"]},"metadata":{},"sourceType":"module"}