{"ast":null,"code":"var _jsxFileName = \"E:\\\\PROGRAMING\\\\HTML CSS  JAVA SCRIPT\\\\5_ReactJS\\\\4_JSX_Expractions_IN_ReactJS\\\\reactapp\\\\src\\\\index.js\";\n//          JSX EXPRESSION IN REACT         \\\\\n\n/*\n      Rendering Variable OR Expressions in the JSX :\n            To rander a Variable/Expression in the JSX Element we use the Curly Brackets '{}'.\n              Put the Variable/Expression in the Curly Brackets '{}' within the JSX Element to Render it. \n*/\n// Importing Required Modules :\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nvar name = \"Jarviz\"; // Rendering :\n// Add Variable/Expression without Curly '{}' Brackets :\n\nReactDOM.render( /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 3\n  }\n}, \"Hellow , The Variable is Added in the JSX without Curly Brackets = name.\"), /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 3\n  }\n}, \"The Expression is used in the JSX without Curly Brackets , The Sum of 5 & 10 = 5 + 10\")), document.getElementById('root')); // sad\n\nReactDOM.render( /*#__PURE__*/React.createElement(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 3\n  }\n}, \"Hellow this is Added by JSX.\"), document.getElementById('roo'));\nReactDOM.render( /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }\n}, \"Hellow this Multiple Elements Added by JSX with HTML Element.\"), /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }\n}, \"This is the Second Element.\")), document.getElementById('roo'));\nReactDOM.render( /*#__PURE__*/React.createElement(React.Fragment, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 3\n  }\n}, \"Hellow this Multiple Elementes Added by JSX with Fragment .\"), /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 3\n  }\n}, \"This is the Second Element.\")), document.getElementById('roo')); // ---------------OR---------------\n\nReactDOM.render( /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 3\n  }\n}, \"Hellow this Multiple Elementes Added by JSX with Fragment .\"), /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 3\n  }\n}, \"This is the Second Element.\")), document.getElementById('roo')); // Using Array ,\n// It also behaive as a Fragment Element :\n\nReactDOM.render([/*#__PURE__*/React.createElement(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 3\n  }\n}, \"Hellow this Multiple Elementes Added by JSX with ARRAY .\"),\n/*#__PURE__*/\n// Every Elements must be Seperated by comma in Array.\nReact.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 3\n  }\n}, \"This is the Second Element.\")], document.getElementById('roo')); // This Array Metod is Added in React after React 16+ Versions.\n//        END       \\\\","map":{"version":3,"sources":["E:/PROGRAMING/HTML CSS  JAVA SCRIPT/5_ReactJS/4_JSX_Expractions_IN_ReactJS/reactapp/src/index.js"],"names":["React","ReactDOM","name","render","document","getElementById"],"mappings":";AAAA;;AAEA;;;;;AAMI;AACJ,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEE,IAAIC,IAAI,GAAG,QAAX,C,CAEE;AACE;;AACND,QAAQ,CAACE,MAAT,eACE,uDACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8EADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2FAFA,CADF,EAKEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CALF,E,CAOM;;AAENJ,QAAQ,CAACE,MAAT,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,EAEEC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAFF;AAKAJ,QAAQ,CAACE,MAAT,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mEADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFA,CADF,EAKEC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CALF;AAUAJ,QAAQ,CAACE,MAAT,eACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFA,CADF,EAKEC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CALF,E,CAOA;;AACAJ,QAAQ,CAACE,MAAT,eACE,uDACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFA,CADF,EAKEC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CALF,E,CAQI;AACE;;AACNJ,QAAQ,CAACE,MAAT,CACE,cACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DADA;AAAA;AACoE;AACpE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFA,CADF,EAKEC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CALF,E,CAOU;AAIA","sourcesContent":["//          JSX EXPRESSION IN REACT         \\\\\n\n/*\n      Rendering Variable OR Expressions in the JSX :\n            To rander a Variable/Expression in the JSX Element we use the Curly Brackets '{}'.\n              Put the Variable/Expression in the Curly Brackets '{}' within the JSX Element to Render it. \n*/\n\n    // Importing Required Modules :\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n  var name = \"Jarviz\";\n\n    // Rendering :\n      // Add Variable/Expression without Curly '{}' Brackets :\nReactDOM.render(\n  <>\n  <h1>Hellow , The Variable is Added in the JSX without Curly Brackets = name.</h1> \n  <p>The Expression is used in the JSX without Curly Brackets , The Sum of 5 & 10 = 5 + 10</p>\n  </>,\n  document.getElementById('root')\n);\n      // sad\n\nReactDOM.render(\n  <h1>Hellow this is Added by JSX.</h1> ,\n  document.getElementById('roo')\n);\n    \nReactDOM.render(\n  <div>\n  <h1>Hellow this Multiple Elements Added by JSX with HTML Element.</h1>\n  <p>This is the Second Element.</p> \n  </div>,\n  document.getElementById('roo')\n);\n\n\n\nReactDOM.render(\n  <React.Fragment>\n  <h1>Hellow this Multiple Elementes Added by JSX with Fragment .</h1>\n  <p>This is the Second Element.</p> \n  </React.Fragment>,\n  document.getElementById('roo')\n);\n// ---------------OR---------------\nReactDOM.render(\n  <>\n  <h1>Hellow this Multiple Elementes Added by JSX with Fragment .</h1>\n  <p>This is the Second Element.</p> \n  </>,\n  document.getElementById('roo')\n);\n\n    // Using Array ,\n      // It also behaive as a Fragment Element :\nReactDOM.render(\n  [\n  <h1>Hellow this Multiple Elementes Added by JSX with ARRAY .</h1> , // Every Elements must be Seperated by comma in Array.\n  <p>This is the Second Element.</p> \n  ],\n  document.getElementById('roo')\n);    \n          // This Array Metod is Added in React after React 16+ Versions.\n\n\n\n          //        END       \\\\"]},"metadata":{},"sourceType":"module"}