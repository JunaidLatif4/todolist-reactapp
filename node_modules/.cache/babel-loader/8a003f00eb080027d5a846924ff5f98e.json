{"ast":null,"code":"var _jsxFileName = \"E:\\\\PROGRAMING\\\\HTML CSS  JAVA SCRIPT\\\\5_ReactJS\\\\7_MiniProject_No.1\\\\reactapp\\\\src\\\\index.js\";\n//          MINI-PROJECT IN REACT.JS NO.1         \\\\\n\n/*\n        Adding Dynamic String in HTML usin ReactJS :\n              * Show Time & Date on the HTML.\n              * Show Good Morning when the time is between 4am To 11am. \n              * Show Good Afternoon when the time is between 11pm To 6pm. \n              * Show Good Night when the time is between 6pm To 4am. \n          // The Greeting Color is also Different on every Greet.\n*/\n// Importing Required Modules :\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./index.css\";\nvar name = \"Jarviz\";\nvar profession = \"Artificial Intelligence\";\nvar img = \"https://picsum.photos/200/300\";\nvar link = \"https://facebook.com\"; // Rendering :    \n\nReactDOM.render( /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 3\n  }\n}, \"Hellow , Sir \", /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 20\n  }\n}, \" \", greet, \" \"))), document.getElementById('root'));\n/*\n        IN-LINE & INTERNAL CSS :\n              For InLine CSS in JSX Element :\n                Add a 'style' Attribute in the Element ,\n                  & in the Style Attribute write the In-line CSS in the Curly '{}' Brackets as a Object (key Value pairs) , every pair is seprated by comma ',' & all the object is in the Curly Bracket.\n                    Write In-line CSS AS :\n                      <h1 style={ {color:\"black\" , margin:\"25px 20px\"} } > </h1> , The First two Curly Brackets Allows us to write a Object within them.\n              \n        INTERNAL CSS :\n              For Internal CSS in React :\n                Make a Object variable having CSS Properties in Key-Value Pairs for a Specific Element's CSS ,\n                  & Add the Variable in the JSX's Element in Style Attribute within Curly '{}' Brackets.\n                    AS :\n                      var h1css = {\n                        color: \"Black\" , \n                        margin : \"20px 25px\",\n                        border: \"2px solid green\"\n                      }\n                        <h1 style={h1css} > </h1> , This is the way to Add Internal CSS.\n            *** In JavaScript (ReactJS) , the properties of Internal & InLine CSS , use the CamelCase insted of kebab-case while writting CSS Properties.\n                      AS :\n                        For External & HTML CSS = border-radius: 25px; (this is a kebab-case).\n                        For ReactJS Internal & InLine CSS = borderRadius : \"25px\" (this is a camelCase).\n*/\n// Inline CSS :\n\nReactDOM.render( /*#__PURE__*/React.createElement(\"div\", {\n  className: \"sec1\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"h2\", {\n  style: {\n    color: \"blue\"\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 3\n  }\n}, \"This is Styled By the InLine CSS.\")), document.getElementById('root2'));\nvar h2 = {\n  color: \"#dbae17\",\n  padding: \"30px\"\n};\nvar btn = {\n  border: \"2px solid pink\",\n  borderRadius: \"20px\",\n  padding: \"20px\",\n  backgroundColor: \"#50bf59\",\n  color: \"white\",\n  textAlign: \"center\",\n  textDecoration: \"none\",\n  cursor: \"pointer\",\n  margin: \"25px\"\n}; // Internal CSS :\n\nReactDOM.render( /*#__PURE__*/React.createElement(\"div\", {\n  className: \"sec1\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"h2\", {\n  style: h2,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 3\n  }\n}, \"This is Style by the Internal CSS :\"), /*#__PURE__*/React.createElement(\"a\", {\n  href: link,\n  style: btn,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 3\n  }\n}, \"Go TO Facobook\")), document.getElementById('root3')); //                END                 \\\\","map":{"version":3,"sources":["E:/PROGRAMING/HTML CSS  JAVA SCRIPT/5_ReactJS/7_MiniProject_No.1/reactapp/src/index.js"],"names":["React","ReactDOM","name","profession","img","link","render","greet","document","getElementById","color","h2","padding","btn","border","borderRadius","backgroundColor","textAlign","textDecoration","cursor","margin"],"mappings":";AAAA;;AAEA;;;;;;;;AASI;AACJ,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AAGE,IAAIC,IAAI,GAAG,QAAX;AACA,IAAIC,UAAU,GAAG,yBAAjB;AACA,IAAIC,GAAG,GAAG,+BAAV;AACA,IAAIC,IAAI,GAAG,sBAAX,C,CAEE;;AACJJ,QAAQ,CAACK,MAAT,eACE,uDACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAQC,KAAR,MAAjB,CADA,CADF,EAIEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF;AASA;;;;;;;;;;;;;;;;;;;;;;;;AAyBM;;AACNR,QAAQ,CAACK,MAAT,eACE;AAAK,EAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACA;AAAI,EAAA,KAAK,EAAE;AAACI,IAAAA,KAAK,EAAC;AAAP,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADA,CADF,EAIEF,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAJF;AASA,IAAIE,EAAE,GAAG;AACPD,EAAAA,KAAK,EAAE,SADA;AAEPE,EAAAA,OAAO,EAAE;AAFF,CAAT;AAIA,IAAIC,GAAG,GAAG;AACRC,EAAAA,MAAM,EAAE,gBADA;AAERC,EAAAA,YAAY,EAAE,MAFN;AAGRH,EAAAA,OAAO,EAAE,MAHD;AAIRI,EAAAA,eAAe,EAAE,SAJT;AAKRN,EAAAA,KAAK,EAAE,OALC;AAMRO,EAAAA,SAAS,EAAE,QANH;AAORC,EAAAA,cAAc,EAAE,MAPR;AAQRC,EAAAA,MAAM,EAAE,SARA;AASRC,EAAAA,MAAM,EAAE;AATA,CAAV,C,CAYM;;AACNnB,QAAQ,CAACK,MAAT,eACE;AAAK,EAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACA;AAAI,EAAA,KAAK,EAAEK,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADA,eAEA;AAAG,EAAA,IAAI,EAAEN,IAAT;AAAe,EAAA,KAAK,EAAEQ,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFA,CADF,EAKEL,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CALF,E,CASoB","sourcesContent":["//          MINI-PROJECT IN REACT.JS NO.1         \\\\\n\n/*\n        Adding Dynamic String in HTML usin ReactJS :\n              * Show Time & Date on the HTML.\n              * Show Good Morning when the time is between 4am To 11am. \n              * Show Good Afternoon when the time is between 11pm To 6pm. \n              * Show Good Night when the time is between 6pm To 4am. \n          // The Greeting Color is also Different on every Greet.\n*/\n\n    // Importing Required Modules :\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./index.css\"\n\n\n  var name = \"Jarviz\";\n  var profession = \"Artificial Intelligence\";\n  var img = \"https://picsum.photos/200/300\";\n  var link = \"https://facebook.com\";\n\n    // Rendering :    \nReactDOM.render(\n  <>  \n  <h3>Hellow , Sir <span> {greet} </span></h3>\n  </>,\n  document.getElementById('root')\n);\n\n\n\n/*\n        IN-LINE & INTERNAL CSS :\n              For InLine CSS in JSX Element :\n                Add a 'style' Attribute in the Element ,\n                  & in the Style Attribute write the In-line CSS in the Curly '{}' Brackets as a Object (key Value pairs) , every pair is seprated by comma ',' & all the object is in the Curly Bracket.\n                    Write In-line CSS AS :\n                      <h1 style={ {color:\"black\" , margin:\"25px 20px\"} } > </h1> , The First two Curly Brackets Allows us to write a Object within them.\n              \n        INTERNAL CSS :\n              For Internal CSS in React :\n                Make a Object variable having CSS Properties in Key-Value Pairs for a Specific Element's CSS ,\n                  & Add the Variable in the JSX's Element in Style Attribute within Curly '{}' Brackets.\n                    AS :\n                      var h1css = {\n                        color: \"Black\" , \n                        margin : \"20px 25px\",\n                        border: \"2px solid green\"\n                      }\n                        <h1 style={h1css} > </h1> , This is the way to Add Internal CSS.\n            *** In JavaScript (ReactJS) , the properties of Internal & InLine CSS , use the CamelCase insted of kebab-case while writting CSS Properties.\n                      AS :\n                        For External & HTML CSS = border-radius: 25px; (this is a kebab-case).\n                        For ReactJS Internal & InLine CSS = borderRadius : \"25px\" (this is a camelCase).\n*/\n\n      // Inline CSS :\nReactDOM.render(\n  <div className=\"sec1\">\n  <h2 style={{color:\"blue\"}} >This is Styled By the InLine CSS.</h2>\n  </div>,\n  document.getElementById('root2')\n);\n\n\n\nvar h2 = {\n  color: \"#dbae17\",\n  padding: \"30px\"\n};\nvar btn = {\n  border: \"2px solid pink\",\n  borderRadius: \"20px\",\n  padding: \"20px\",\n  backgroundColor: \"#50bf59\",\n  color: \"white\",\n  textAlign: \"center\",\n  textDecoration: \"none\",\n  cursor: \"pointer\",\n  margin: \"25px\"\n};\n\n      // Internal CSS :\nReactDOM.render(\n  <div className=\"sec1\">\n  <h2 style={h2}>This is Style by the Internal CSS :</h2>\n  <a href={link} style={btn}>Go TO Facobook</a>\n  </div>,\n  document.getElementById('root3')\n);\n\n           \n                    //                END                 \\\\"]},"metadata":{},"sourceType":"module"}