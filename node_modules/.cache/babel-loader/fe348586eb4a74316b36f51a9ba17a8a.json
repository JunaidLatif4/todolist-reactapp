{"ast":null,"code":"var _jsxFileName = \"E:\\\\PROGRAMING\\\\HTML CSS  JAVA SCRIPT\\\\5_ReactJS\\\\Practice\\\\reactapp\\\\src\\\\index.js\";\n//          REACT ROUTER'S API USE-PARAM HOOK , USE-LOCATION , USE-HISTORY       \\\\\n\n/*\n            DEFINE UseParam Hook :\n               The useParams hook is used for getting the router parameter from the URL parameters.\n                We can use this hook if we defined routes that take a URL parameter.\n                \n               Route parameters are parts of the URL that will change based on the object we want to display.\n                For example, if we wanted to view information on user #1, we would visit the path /users/1. However,\n                 if we want to view information on user #2, we would visit /users/2.\n                  That last part of the URL is the parameter. With react-router-dom,\n                   we designate a dynamic portion of the URL to be matched by putting a colon (:) before it.\n\n            DEFINE UseLocation Hook :\n                The useLocation hook returns the location object that represents the current URL.\n                 You can think about it like a useState that returns a new location whenever the URL changes.\n                  This could be really useful e.g. in a situation where you would like to trigger a new “page view” event using your web analytics tool whenever a new page loads.\n\n            DEFINE UseHistory Hook :\n                The useHistory hook gives you access to the history instance that you may use to navigate.\n                 UseHistory Hook have the track record of the visited URL , & allow to goback , goforward , & push Functions.\n                    * useHistory also have the Location but it is mutable . If you want to use the Location than it is recomanded to use 'useLocation' Hook insted of 'useHistory.location'.\n*/\n// Importing Required Modules :\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'; // Importing Main Component :\n\nimport App from './App'; // Rendering : \n\nReactDOM.render( /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BrowserRouter, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 13\n  }\n}))), document.getElementById('root')); //                END                 \\\\","map":{"version":3,"sources":["E:/PROGRAMING/HTML CSS  JAVA SCRIPT/5_ReactJS/Practice/reactapp/src/index.js"],"names":["React","ReactDOM","BrowserRouter","App","render","document","getElementById"],"mappings":";AAAA;;AAEA;;;;;;;;;;;;;;;;;;;;;AAuBA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,aAAT,QAA8B,kBAA9B,C,CAEA;;AACA,OAAOC,GAAP,MAAgB,OAAhB,C,CAEA;;AACAF,QAAQ,CAACG,MAAT,eACI,uDACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADJ,CADJ,EAKSC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CALT,E,CAUgB","sourcesContent":["//          REACT ROUTER'S API USE-PARAM HOOK , USE-LOCATION , USE-HISTORY       \\\\\n\n/*\n            DEFINE UseParam Hook :\n               The useParams hook is used for getting the router parameter from the URL parameters.\n                We can use this hook if we defined routes that take a URL parameter.\n                \n               Route parameters are parts of the URL that will change based on the object we want to display.\n                For example, if we wanted to view information on user #1, we would visit the path /users/1. However,\n                 if we want to view information on user #2, we would visit /users/2.\n                  That last part of the URL is the parameter. With react-router-dom,\n                   we designate a dynamic portion of the URL to be matched by putting a colon (:) before it.\n\n            DEFINE UseLocation Hook :\n                The useLocation hook returns the location object that represents the current URL.\n                 You can think about it like a useState that returns a new location whenever the URL changes.\n                  This could be really useful e.g. in a situation where you would like to trigger a new “page view” event using your web analytics tool whenever a new page loads.\n\n            DEFINE UseHistory Hook :\n                The useHistory hook gives you access to the history instance that you may use to navigate.\n                 UseHistory Hook have the track record of the visited URL , & allow to goback , goforward , & push Functions.\n                    * useHistory also have the Location but it is mutable . If you want to use the Location than it is recomanded to use 'useLocation' Hook insted of 'useHistory.location'.\n*/\n\n\n// Importing Required Modules :\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\n\n// Importing Main Component :\nimport App from './App';\n\n// Rendering : \nReactDOM.render(\n    <>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </>, document.getElementById('root')\n);\n\n\n\n                //                END                 \\\\"]},"metadata":{},"sourceType":"module"}