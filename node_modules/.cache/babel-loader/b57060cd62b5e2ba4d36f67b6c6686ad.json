{"ast":null,"code":"var _jsxFileName = \"E:\\\\PROGRAMING\\\\HTML CSS  JAVA SCRIPT\\\\5_ReactJS\\\\5_JSX_Atributes_VS_HTML_Atributes_IN_ReactJS\\\\reactapp\\\\src\\\\index.js\";\n//          JSX ATRIBUTES VS HTML ATTRIBUTES IN REACT         \\\\\n\n/*\n        HTML Attributes :\n              HTML attributes are special words used inside the opening tag to control the element's behaviour.\n               HTML attributes are a modifier of an HTML element type.\n                For Example :\n                  <h1 href=\"#\" contenteditable=\"true\"> </h1>\n                    // In Above Example 'href' & 'contenteditable' is Called Attributs.\n        \n        JSX Atributes :\n              JSX attributes is same as Special words used inside the opening tag of a Element,\n               But in JSX these words Called JSX Attributes insted of HTML attributes.\n                For Example :\n                    ReactDOM.render( <h1 href=\"#\" contentEditable=\"true\"> </h1>.........\n                      // In Above Example 'href' & 'contentEditable' is Called JSX Attributs.\n                          ***** In JSX Elements Attributes is written in camelCase. \n                                  & mostely the HTML Attributes is written in kebab-case.\n*/\n// Importing Required Modules :\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nvar name = \"Jarviz\";\nvar profession = \"Artificial Intelligence\";\nvar img = \"https://picsum.photos/200/300\"; // Rendering :\n\nReactDOM.render(\n/*#__PURE__*/\n// contentEditable Attribute makes the given elemnt EditAble.\nReact.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n  contentEditable: \"true\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }\n}, \"This Element is EditAble.\"), /*#__PURE__*/React.createElement(\"a\", {\n  href: \"https://google.com\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }\n}, \"Got TO Google.\")), document.getElementById('root')); // Adding Images & use other Attributes : (for Practice)             \n\nReactDOM.render(\n/*#__PURE__*/\n// In JSX Image Element , it must be Closing tag in JSX as :\n// <img src=\"#\"> </img>---OR---<img src=\"#\" />\nReact.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 3\n  }\n}, \"In JSX Image Tag Must be in Opening & Closing Tang :\"), /*#__PURE__*/React.createElement(\"img\", {\n  src: \"https://picsum.photos/200/300\",\n  alt: \"Random Image\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 3\n  }\n}), /*#__PURE__*/React.createElement(\"img\", {\n  src: \"https://picsum.photos/300/300\",\n  alt: \"Random Inage\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 3\n  }\n})), document.getElementById('root2'));\nReactDOM.render( /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 3\n  }\n}, \"Putting Images/links Address From a Variables :\"), /*#__PURE__*/React.createElement(\"img\", {\n  src: img,\n  alt: \"Random Inage\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 3\n  }\n})), document.getElementById('root3'));\nReactDOM.render( /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 3\n  }\n}, \"With The Help of Template Literals :\"), /*#__PURE__*/React.createElement(\"h3\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 3\n  }\n}, `Hellow , My 'assitant' Name is ${name} & is a ${profession}`, \" & \", `3 + 5 = ${3 + 5}`, \".\"), /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 3\n  }\n}, `Hellow , My 'assitant' Name is ${name} & is a ${profession} & 3 * 10 = ${3 * 10}`, \".\")), document.getElementById('root4')); //                END                 \\\\","map":{"version":3,"sources":["E:/PROGRAMING/HTML CSS  JAVA SCRIPT/5_ReactJS/5_JSX_Atributes_VS_HTML_Atributes_IN_ReactJS/reactapp/src/index.js"],"names":["React","ReactDOM","name","profession","img","render","document","getElementById"],"mappings":";AAAA;;AAEA;;;;;;;;;;;;;;;;;AAiBI;AACJ,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEE,IAAIC,IAAI,GAAG,QAAX;AACA,IAAIC,UAAU,GAAG,yBAAjB;AACA,IAAIC,GAAG,GAAG,+BAAV,C,CAEE;;AAEJH,QAAQ,CAACI,MAAT;AAAA;AACM;AACJ,uDACA;AAAI,EAAA,eAAe,EAAC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADA,eAEA;AAAG,EAAA,IAAI,EAAC,oBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFA,CAFF,EAMEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF,E,CAQM;;AACNN,QAAQ,CAACI,MAAT;AAAA;AACQ;AACE;AACR,uDACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DADA,eAEA;AAAK,EAAA,GAAG,EAAC,+BAAT;AAAyC,EAAA,GAAG,EAAC,cAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFA,eAGA;AAAK,EAAA,GAAG,EAAC,+BAAT;AAAyC,EAAA,GAAG,EAAC,cAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHA,CAHF,EAQEC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CARF;AAYAN,QAAQ,CAACI,MAAT,eACE,uDACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDADA,eAEA;AAAK,EAAA,GAAG,EAAED,GAAV;AAAe,EAAA,GAAG,EAAC,cAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFA,CADF,EAKEE,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CALF;AAUAN,QAAQ,CAACI,MAAT,eACE,uDACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAO,kCAAiCH,IAAK,WAAUC,UAAW,EAAlE,SAA2E,WAAU,IAAE,CAAE,EAAzF,MAFA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAM,kCAAiCD,IAAK,WAAUC,UAAW,eAAc,IAAE,EAAG,EAApF,MAHA,CADF,EAMEG,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CANF,E,CAWoB","sourcesContent":["//          JSX ATRIBUTES VS HTML ATTRIBUTES IN REACT         \\\\\n\n/*\n        HTML Attributes :\n              HTML attributes are special words used inside the opening tag to control the element's behaviour.\n               HTML attributes are a modifier of an HTML element type.\n                For Example :\n                  <h1 href=\"#\" contenteditable=\"true\"> </h1>\n                    // In Above Example 'href' & 'contenteditable' is Called Attributs.\n        \n        JSX Atributes :\n              JSX attributes is same as Special words used inside the opening tag of a Element,\n               But in JSX these words Called JSX Attributes insted of HTML attributes.\n                For Example :\n                    ReactDOM.render( <h1 href=\"#\" contentEditable=\"true\"> </h1>.........\n                      // In Above Example 'href' & 'contentEditable' is Called JSX Attributs.\n                          ***** In JSX Elements Attributes is written in camelCase. \n                                  & mostely the HTML Attributes is written in kebab-case.\n*/\n    // Importing Required Modules :\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n  var name = \"Jarviz\";\n  var profession = \"Artificial Intelligence\";\n  var img = \"https://picsum.photos/200/300\"\n\n    // Rendering :\n      \nReactDOM.render(\n      // contentEditable Attribute makes the given elemnt EditAble.\n  <>  \n  <h1 contentEditable=\"true\">This Element is EditAble.</h1>\n  <a href=\"https://google.com\">Got TO Google.</a> \n  </>,\n  document.getElementById('root')\n);\n      // Adding Images & use other Attributes : (for Practice)             \nReactDOM.render(\n        // In JSX Image Element , it must be Closing tag in JSX as :\n          // <img src=\"#\"> </img>---OR---<img src=\"#\" />\n  <>\n  <h2>In JSX Image Tag Must be in Opening & Closing Tang :</h2>\n  <img src=\"https://picsum.photos/200/300\" alt=\"Random Image\"></img>\n  <img src=\"https://picsum.photos/300/300\" alt=\"Random Inage\" />  \n  </>,\n  document.getElementById('root2')\n);\n \n\nReactDOM.render(\n  <>\n  <h2>Putting Images/links Address From a Variables :</h2>\n  <img src={img} alt=\"Random Inage\" />\n  </>,\n  document.getElementById('root3')\n);\n\n\n\nReactDOM.render(\n  <>\n  <h1>With The Help of Template Literals :</h1>\n  <h3>{ `Hellow , My 'assitant' Name is ${name} & is a ${profession}` } & { `3 + 5 = ${3+5}` }.</h3> \n  <p>{ `Hellow , My 'assitant' Name is ${name} & is a ${profession} & 3 * 10 = ${3*10}` }.</p>\n  </>,\n  document.getElementById('root4')\n);\n\n \n            \n                    //                END                 \\\\"]},"metadata":{},"sourceType":"module"}