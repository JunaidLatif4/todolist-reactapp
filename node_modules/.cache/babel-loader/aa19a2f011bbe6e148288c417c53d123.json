{"ast":null,"code":"var _jsxFileName = \"E:\\\\PROGRAMING\\\\HTML CSS  JAVA SCRIPT\\\\5_ReactJS\\\\Practice\\\\reactapp\\\\src\\\\index.js\";\n//          REACT ROUTER'S API USE-PARAM HOOK       \\\\\n\n/*\n            DEFINE UseParam Hook :\n               The useParams hook is used for getting the router parameter from the URL parameters.\n                We can use this hook if we defined routes that take a URL parameter.\n                \n               A tool that allows you to handle routes in a web app, using dynamic routing.\n                Dynamic routing takes place as the app is rendering on your machine,\n                 unlike the old routing architecture where the routing is handled in a configuration outside of a running app.\n                  React router implements a component-based approach to routing.\n                   It provides different routing components according to the needs of the application and platform.\n\n */\n// Importing Required Modules :\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'; // Importing Main Component :\n\nimport App from './App'; // Rendering :\n// BroweserRouter :\n// This Attribute is use to Select the Component whiuch we want to route ,\n// In this case we want to Route all the component that is presend in the App Attribute. \n\nReactDOM.render( /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BrowserRouter, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 13\n  }\n}))), document.getElementById('root')); //                END                 \\\\","map":{"version":3,"sources":["E:/PROGRAMING/HTML CSS  JAVA SCRIPT/5_ReactJS/Practice/reactapp/src/index.js"],"names":["React","ReactDOM","BrowserRouter","App","render","document","getElementById"],"mappings":";AAAA;;AAEA;;;;;;;;;;;;AAcA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,aAAT,QAA8B,kBAA9B,C,CAEA;;AACA,OAAOC,GAAP,MAAgB,OAAhB,C,CAEA;AACI;AACI;AACI;;AACZF,QAAQ,CAACG,MAAT,eACI,uDACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADJ,CADJ,EAKSC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CALT,E,CAUgB","sourcesContent":["//          REACT ROUTER'S API USE-PARAM HOOK       \\\\\n\n/*\n            DEFINE UseParam Hook :\n               The useParams hook is used for getting the router parameter from the URL parameters.\n                We can use this hook if we defined routes that take a URL parameter.\n                \n               A tool that allows you to handle routes in a web app, using dynamic routing.\n                Dynamic routing takes place as the app is rendering on your machine,\n                 unlike the old routing architecture where the routing is handled in a configuration outside of a running app.\n                  React router implements a component-based approach to routing.\n                   It provides different routing components according to the needs of the application and platform.\n\n */\n\n\n// Importing Required Modules :\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\n\n// Importing Main Component :\nimport App from './App';\n\n// Rendering :\n    // BroweserRouter :\n        // This Attribute is use to Select the Component whiuch we want to route ,\n            // In this case we want to Route all the component that is presend in the App Attribute. \nReactDOM.render(\n    <>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </>, document.getElementById('root')\n);\n\n\n\n                //                END                 \\\\"]},"metadata":{},"sourceType":"module"}