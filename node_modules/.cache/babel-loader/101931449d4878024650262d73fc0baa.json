{"ast":null,"code":"var _jsxFileName = \"E:\\\\PROGRAMING\\\\HTML CSS  JAVA SCRIPT\\\\5_ReactJS\\\\6_CSS_IN_ReactJS\\\\reactapp\\\\src\\\\index.js\";\n//          CSS IN REACT.JS         \\\\\n\n/*\n        EXTERNAL CSS :\n              The use of external CSS in react is just like the same a use in HTML.\n                Write the requried CSS in the Seprate '*.css' file for the JSX Element & Encluded it to the React (index.js).\n                  The Including method of External CSS is quit different in React as compare to HTML.\n                    TO Enclude the External CSS , we have to importe the CSS file in the React.\n\n        * Class :\n              In JSX Element , we can't give the class to the JSX Element as :\n                <h1 class=\"#\"> </h1> , Because the 'class' is a Keyword in the JavaScript , we can't use the word 'Class' .\n              Insted of 'class' we use 'className' AS :\n                <h1 className=\"#\"> </h1> , this is the way to give the calss of JSX Elements.\n                  ** The use of \"id\" in JSX Elements is Same as in HTML.\n                      ** If you use 'class' insted of 'className' initially its work but given an warning in the browser console.\n                          & Also it is not a appropriate way.\n*/\n// Importing Required Modules :\nimport React from 'react';\nimport ReactDOM from 'react-dom'; // Importing/Encluding External CSS :\n\nimport \"./index.css\"; // './' Means the Sane Directory , in JavaScript we have also to write the present directory command.\n\nvar name = \"Jarviz\";\nvar profession = \"Artificial Intelligence\";\nvar img = \"https://picsum.photos/200/300\";\nvar link = \"https://facebook.com\"; // Rendering :    \n\nReactDOM.render( /*#__PURE__*/React.createElement(\"div\", {\n  className: \"sec1\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"h1\", {\n  className: \"heading\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }\n}, \"This is Styled by the External CSS .\"), /*#__PURE__*/React.createElement(\"a\", {\n  href: \"https://google.com\",\n  className: \"links\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }\n}, \"Got TO Google.\")), document.getElementById('root'));\n/*\n        IN-LINE & INTERNAL CSS :\n              For InLine CSS in JSX Element :\n                Add a 'style' Attribute in the Element ,\n                  & in the Style Attribute write the In-line CSS in the Curly '{}' Brackets as a Object (key Value pairs) , every pair is seprated by comma ',' & all the object is in the Curly Bracket.\n                    Write In-line CSS AS :\n                      <h1 style={ {color:\"black\" , margin:\"25px 20px\"} } > </h1> , The First two Curly Brackets Allows us to write a Object within them.\n              \n        INTERNAL CSS :\n              For Internal CSS in React :\n                Make a Object variable having CSS Properties in Key-Value Pairs for a Specific Element's CSS ,\n                  & Add the Variable in the JSX's Element in Style Attribute within Curly '{}' Brackets.\n                    AS :\n                      var h1css = {\n                        color: \"Black\" , \n                        margin : \"20px 25px\",\n                        border: \"2px solid green\"\n                      }\n                        <h1 style={h1css} > </h1> , This is the way to Add Internal CSS.\n            *** In JavaScript (ReactJS) , the properties of Internal & InLine CSS , use the CamelCase insted of kebab-case while writting CSS Properties.\n                      AS :\n                        For External & HTML CSS = border-radius: 25px; (this is a kebab-case).\n                        For ReactJS Internal & InLine CSS = borderRadius : \"25px\" (this is a camelCase).\n*/\n// Inline CSS :\n\nReactDOM.render( /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n  style: {\n    color: \"blue\"\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 3\n  }\n}, \"This is Styled By the InLine CSS.\")), document.getElementById('root2'));\nvar btn = // In JSX the Line break Element also must have closing tag as :\n// <br></br>------OR-------<br/>\nReactDOM.render( /*#__PURE__*/React.createElement(\"div\", {\n  className: \"sec1\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"h2\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 3\n  }\n}, \"This is Style by the Internal CSS :\"), /*#__PURE__*/React.createElement(\"a\", {\n  href: link,\n  style: btn,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 3\n  }\n}, \"Go TO Facobook\")), document.getElementById('root3')); //                END                 \\\\","map":{"version":3,"sources":["E:/PROGRAMING/HTML CSS  JAVA SCRIPT/5_ReactJS/6_CSS_IN_ReactJS/reactapp/src/index.js"],"names":["React","ReactDOM","name","profession","img","link","render","document","getElementById","color","btn"],"mappings":";AAAA;;AAEA;;;;;;;;;;;;;;;;AAiBI;AACJ,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CAEI;;AACJ,OAAO,aAAP,C,CACQ;;AAEN,IAAIC,IAAI,GAAG,QAAX;AACA,IAAIC,UAAU,GAAG,yBAAjB;AACA,IAAIC,GAAG,GAAG,+BAAV;AACA,IAAIC,IAAI,GAAG,sBAAX,C,CAEE;;AACJJ,QAAQ,CAACK,MAAT,eACE;AAAK,EAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACA;AAAI,EAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADA,eAEA;AAAG,EAAA,IAAI,EAAC,oBAAR;AAA6B,EAAA,SAAS,EAAC,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFA,CADF,EAKEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CALF;AAUA;;;;;;;;;;;;;;;;;;;;;;;;AAyBM;;AACNP,QAAQ,CAACK,MAAT,eACE,uDACA;AAAI,EAAA,KAAK,EAAE;AAACG,IAAAA,KAAK,EAAC;AAAP,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADA,CADF,EAIEF,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAJF;AAQA,IAAIE,GAAG,GAGC;AACE;AACVT,QAAQ,CAACK,MAAT,eACE;AAAK,EAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADA,eAEA;AAAG,EAAA,IAAI,EAAED,IAAT;AAAe,EAAA,KAAK,EAAEK,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFA,CADF,EAKEH,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CALF,CALA,C,CAcoB","sourcesContent":["//          CSS IN REACT.JS         \\\\\n\n/*\n        EXTERNAL CSS :\n              The use of external CSS in react is just like the same a use in HTML.\n                Write the requried CSS in the Seprate '*.css' file for the JSX Element & Encluded it to the React (index.js).\n                  The Including method of External CSS is quit different in React as compare to HTML.\n                    TO Enclude the External CSS , we have to importe the CSS file in the React.\n\n        * Class :\n              In JSX Element , we can't give the class to the JSX Element as :\n                <h1 class=\"#\"> </h1> , Because the 'class' is a Keyword in the JavaScript , we can't use the word 'Class' .\n              Insted of 'class' we use 'className' AS :\n                <h1 className=\"#\"> </h1> , this is the way to give the calss of JSX Elements.\n                  ** The use of \"id\" in JSX Elements is Same as in HTML.\n                      ** If you use 'class' insted of 'className' initially its work but given an warning in the browser console.\n                          & Also it is not a appropriate way.\n*/\n\n    // Importing Required Modules :\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n    // Importing/Encluding External CSS :\nimport \"./index.css\"\n        // './' Means the Sane Directory , in JavaScript we have also to write the present directory command.\n\n  var name = \"Jarviz\";\n  var profession = \"Artificial Intelligence\";\n  var img = \"https://picsum.photos/200/300\";\n  var link = \"https://facebook.com\";\n\n    // Rendering :    \nReactDOM.render(\n  <div className=\"sec1\">  \n  <h1 className=\"heading\">This is Styled by the External CSS .</h1>\n  <a href=\"https://google.com\" className=\"links\">Got TO Google.</a> \n  </div>,\n  document.getElementById('root')\n);\n\n\n\n/*\n        IN-LINE & INTERNAL CSS :\n              For InLine CSS in JSX Element :\n                Add a 'style' Attribute in the Element ,\n                  & in the Style Attribute write the In-line CSS in the Curly '{}' Brackets as a Object (key Value pairs) , every pair is seprated by comma ',' & all the object is in the Curly Bracket.\n                    Write In-line CSS AS :\n                      <h1 style={ {color:\"black\" , margin:\"25px 20px\"} } > </h1> , The First two Curly Brackets Allows us to write a Object within them.\n              \n        INTERNAL CSS :\n              For Internal CSS in React :\n                Make a Object variable having CSS Properties in Key-Value Pairs for a Specific Element's CSS ,\n                  & Add the Variable in the JSX's Element in Style Attribute within Curly '{}' Brackets.\n                    AS :\n                      var h1css = {\n                        color: \"Black\" , \n                        margin : \"20px 25px\",\n                        border: \"2px solid green\"\n                      }\n                        <h1 style={h1css} > </h1> , This is the way to Add Internal CSS.\n            *** In JavaScript (ReactJS) , the properties of Internal & InLine CSS , use the CamelCase insted of kebab-case while writting CSS Properties.\n                      AS :\n                        For External & HTML CSS = border-radius: 25px; (this is a kebab-case).\n                        For ReactJS Internal & InLine CSS = borderRadius : \"25px\" (this is a camelCase).\n*/\n\n      // Inline CSS :\nReactDOM.render(\n  <>\n  <h2 style={{color:\"blue\"}} >This is Styled By the InLine CSS.</h2>\n  </>,\n  document.getElementById('root2')\n);\n\n\nvar btn = \n \n\n        // In JSX the Line break Element also must have closing tag as :\n          // <br></br>------OR-------<br/>\nReactDOM.render(\n  <div className=\"sec1\">\n  <h2>This is Style by the Internal CSS :</h2>\n  <a href={link} style={btn}>Go TO Facobook</a>\n  </div>,\n  document.getElementById('root3')\n);\n\n           \n                    //                END                 \\\\"]},"metadata":{},"sourceType":"module"}